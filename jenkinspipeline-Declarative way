pipeline{

agent any

tools {
  maven 'maven3.9.4'
}


stages{
//CheckoutCode
stage('CheckOutCode'){
steps{
notifyBuild('STARTED')
git branch: 'development', credentialsId: 'a78349eb-2840-4b92-a534-eb243a624e9f', url: 'https://github.com/sudheerreddy93/maven-web-application.git'

}
}

//Build
stage('BuildCode'){
steps{
sh "mvn clean package"
}
}
//Execute Sonarqube Reports
stage('Execute SonarQube report'){
steps{
sh "mvn clean sonar:sonar"
}
}
//Upload into Nexus
stage('UploadArtifacts into Nexus'){
steps{
sh "mvn clean deploy"
}
}

//Deploy the app in Tomcat
stage('Deplot the app in Tomcat'){
steps{
sshagent(['f96a9f73-8b92-4cea-8760-4ea87e785126']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.32.54:/opt/apache-tomcat-9.0.80/webapps/"
}

}
}


}//stages closing 
post {
  success {
    notifyBuild(currentBuild.result)
  }
  failure {
    notifyBuild(currentBuild.result)
  }
}
}//pipeline closing

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
